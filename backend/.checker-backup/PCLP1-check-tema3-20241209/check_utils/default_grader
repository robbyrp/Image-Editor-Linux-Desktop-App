#!/usr/bin/python3
import inspect
import pathlib
import os
import sys

current_dir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))
root_dir = pathlib.Path(current_dir).parent.parent
sys.path.insert(0, str(root_dir))

from check_utils.grader import Grader


class GenericGrader(Grader):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

    def grade_test(self):
        input, output, ref = self.read()

        if len(output) != len(ref):
            self.exit(code=-1, err=f'Number of lines mismatch: output={len(output)} vs ref={len(ref)}')

        for i, (out_line, ref_line) in enumerate(zip(output, ref)):
            if out_line.strip() != ref_line.strip():
                self.exit(code=-1, err=f'Line {i+1} mismatch: output="{out_line.strip()}" vs ref="{ref_line.strip()}"')

        self.add_points(self.max_points)


if __name__ == '__main__':
    assert len(sys.argv) >= 5, f'Expected at least 5 arguments, got {len(sys.argv)}: {sys.argv}'
    
    grader = GenericGrader(sys.argv[1], sys.argv[2], sys.argv[3], sys.argv[4])
    grader.run()

